###############################
## Common Alfresco Properties #
###############################

dir.root=/mnt/alf_data
dir.contentstore=${dir.root}/contentstore
dir.contentstore.deleted=${dir.root}/contentstore.deleted

# local cache for alf_data
dir.cachedcontent=${dir.root}/cachedcontent
#Maximum disk usage for the cache in MB
system.content.caching.maxUsageMB=51200
#Maximum size of files which can be stored in the cache in MB (zero implies no limit)
system.content.caching.maxFileSizeMB=0

alfresco.context=alfresco
alfresco.host=localhost
alfresco.port=8080
alfresco.protocol=http

share.context=share
share.host=localhost
share.port=8080
share.protocol=http

### database connection properties ###
db.driver=org.postgresql.Driver
db.name=alfresco
db.username=mmsuser
db.password=SoM3sUp3r5ECRETpAs5w0rD
db.host=db
db.port=5432
# probably can up this to same as max connections in db configuration (currently 225)
db.pool.max=225
db.pool.validate.query


db.url=jdbc:postgresql://${db.host}:${db.port}/${db.name}

# The server mode. Set value here
# # UNKNOWN | TEST | BACKUP | PRODUCTION
system.serverMode=TEST


### FTP Server Configuration ###
ftp.enabled=false
ftp.port=2121

### RMI service ports ###
alfresco.rmi.services.port=50500
avm.rmi.service.port=0
avmsync.rmi.service.port=0
attribute.rmi.service.port=0
authentication.rmi.service.port=0
repo.rmi.service.port=0
action.rmi.service.port=0
deployment.rmi.service.port=0

### External executable locations ###
ooo.exe=/usr/lib64/libreoffice/program/soffice.bin
ooo.enabled=true
ooo.port=8100
img.root=/usr
img.dyn=${img.root}/lib
img.exe=/usr/bin/convert
swf.exe=/usr/local/bin/pdf2swf

jodconverter.enabled=false
jodconverter.officeHome=/usr/lib64/libreoffice/
jodconverter.portNumbers=8100

### Initial admin password ###
alfresco_user_store.adminusername=admin
alfresco_user_store.adminpassword=209c6174da490caeb422f3fa5a7ae634

### E-mail site invitation setting ###
notification.email.siteinvite=false

encryption.ssl.keystore.location=/usr/local/tomcat/keystore/ssl.keystore
encryption.ssl.truststore.location=/usr/local/tomcat/keystore/ssl.truststore

### Solr indexing ###
index.subsystem.name=solr4
dir.keystore=/usr/local/tomcat/keystore
solr.host=localhost
solr.port=8080
solr.port.ssl=8443


### BPM Engine ###
system.workflow.engine.jbpm.enabled=false

# disable google
googledocs.enabled=false
googledocs.googleeditable.enabled=false

# turn off cloud sync and cifs
syncService.mode=OFF
cifs.enabled=false

### Remote JMX (Default: disabled) ###
alfresco.jmx.connector.enabled=false


###############################################################################
# [CYL]  Override the SMTP defaults - no need to authenticate to send email messages, so null out username
mail.host =
mail.testmessage.send = true
mail.testmessage.to =
mail.username =
mail.from.default =
mail.smtp.timeout=10000
activities.feed.notifier.enabled = false

#replication.enabled=true
#replication.transfer.readonly=true
#transferservice.receiver.enabled=true

###############################################################################
# The default authentication chain
# To configure external authentication subsystems see:
# http://wiki.alfresco.com/wiki/Alfresco_Authentication_Subsystems
#-------------

######AUTHENTIFICATION CHAIN####
#authentication.chain=ldap1:ldap,alfrescoNtlm1:alfrescoNtlm
#authentication.chain=ldap1:ldap,partners1:ldap,alfrescoNtlm1:alfrescoNtlm
authentication.chain=alfrescoNtlm1:alfrescoNtlm

# turn off timestamp propagation to parent folders (slows down loading)
system.enableTimestampPropagation=false
###### SYNCHRONISATION SETTINGS ####
# http://docs.alfresco.com/4.0/index.jsp?topic=%2Fcom.alfresco.enterprise.doc%2Fconcepts%2Fauth-ldap-intro.html

# Specifies whether to create a user with default properties when a user is successfully authenticated, who does not yet exist in Alfresco, and was not returned by a differential sync (if enabled with the property above). The default is true. Setting this to false allows you to restrict Alfresco to a subset of those users who could be authenticated by LDAP; only those created by synchronization are allowed to log in. You can control the set of users in this more restricted set by overriding the user query properties of the LDAP authentication subsystem.
synchronization.autoCreatePeopleOnLogin=true

# Specifies if the scheduled synchronization job is run in differential mode. The default is false, which means that the scheduled sync job is run in full mode. Regardless of this setting a differential sync may still be triggered when a user is successfully authenticated who does not yet exist in Alfresco.
synchronization.synchronizeChangesOnly=false

# Specifies whether to trigger a differential sync when the subsystem starts up. The default is true. This ensures that when user registries are first configured, the bulk of the synchronization work is done on server startup, rather than on the first login.
synchronization.syncOnStartup=false

# Specifies whether to trigger a differential sync when a user is successfully authenticated who does not yet exist in Alfresco. The default is true.
synchronization.syncWhenMissingPeopleLogIn=true

# Specifies if deletion of local users and groups is allowed. See the sections on Synchronization deletion and Collision resolution for the circumstances under which this may happen. The default is true. If false, then no sync job will be allowed to delete users or groups during the handling of removals or collision resolution.
synchronization.allowDeletions=false

### DONT USE UNIX CRON EXPRESSION- USE QUARTZ CRON EXPRESSIONS!!!
### look here http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html
### synchronisation starts every 60 minutes!
#synchronization.import.cron=0 0/60 * * * ?
synchronization.import.cron=0 0 0/2 * * ?
